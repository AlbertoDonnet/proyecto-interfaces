{"version":3,"mappings":"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","names":["_","i","state","items","controlled_anchor","items_map","transitions","length","is_controlled","parent_node","item","node","flags","get_collection","get_key","render_fn","fallback_fn","anchor","fallback","was_empty","each_array","collection","array","mismatch","is_else","prev","value","key","first","current","seen","matched","stashed","child_anchor","start","j","a","b","to_destroy","destroy_length","index","type","next","reactive","mutable","end","dest","next_node","styles","dom","prev_styles","next_styles","next_style_attr","select","mounting","w.select_multiple_invalid_value","option","option_value","get_value","observer","get","set","is_reset","query","selected_option","Plotly","$.mutable_source","plotDiv","zData","$.prop","$$props","xRange","yRange","resolution","title","height","enableControls","autoRotate","plotInitialized","resizeObserver","generateCoordinates","range","coords","createOrUpdatePlot","$.get","_a","_b","x","y","data","layout","config","$.set","startAutoRotation","error","angle","rotationInterval","radians","camera","__vite_default__","n","$$render","consequent","$.bind_this","div_1","$$value","amplitude","frequency","r","separation","r1","r2","spread","curvature","offset","curvatureX","curvatureY","formulaFn","row","resolve","event","newResolution","newScale","newFormula","$.each","div_13","example","$.event","button_1","$.bind_value","input_2","$.mutate","consequent_1","consequent_2","consequent_3","consequent_4","consequent_5","consequent_6","$.set_text","$.bind_select_value"],"ignoreList":[0,1,2,3],"sources":["../../../../../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../../../../node_modules/svelte/src/internal/shared/attributes.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/style.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/bindings/select.js","../../../../../../src/lib/componentes/graficos/Superficies3DPlot.svelte","../../../../../../src/routes/graficos/+page.svelte"],"sourcesContent":["/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tread_hydration_instruction,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '#client/constants';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = read_hydration_instruction(anchor) === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n","import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n","import { effect } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport { untrack } from '../../../runtime.js';\nimport { is } from '../../../proxy.js';\nimport { is_array } from '../../../../shared/utils.js';\nimport * as w from '../../../warnings.js';\n\n/**\n * Selects the correct option(s) (depending on whether this is a multiple select)\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n * @param {boolean} [mounting]\n */\nexport function select_option(select, value, mounting) {\n\tif (select.multiple) {\n\t\t// If value is null or undefined, keep the selection as is\n\t\tif (value == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If not an array, warn and keep the selection as is\n\t\tif (!is_array(value)) {\n\t\t\treturn w.select_multiple_invalid_value();\n\t\t}\n\n\t\t// Otherwise, update the selection\n\t\tfor (var option of select.options) {\n\t\t\toption.selected = value.includes(get_option_value(option));\n\t\t}\n\n\t\treturn;\n\t}\n\n\tfor (option of select.options) {\n\t\tvar option_value = get_option_value(option);\n\t\tif (is(option_value, value)) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * Selects the correct option(s) if `value` is given,\n * and then sets up a mutation observer to sync the\n * current selection to the dom when it changes. Such\n * changes could for example occur when options are\n * inside an `#each` block.\n * @template V\n * @param {HTMLSelectElement} select\n * @param {() => V} [get_value]\n */\nexport function init_select(select, get_value) {\n\tlet mounting = true;\n\teffect(() => {\n\t\tif (get_value) {\n\t\t\tselect_option(select, untrack(get_value), mounting);\n\t\t}\n\t\tmounting = false;\n\n\t\tvar observer = new MutationObserver(() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = select.__value;\n\t\t\tselect_option(select, value);\n\t\t\t// Deliberately don't update the potential binding value,\n\t\t\t// the model should be preserved unless explicitly changed\n\t\t});\n\n\t\tobserver.observe(select, {\n\t\t\t// Listen to option element changes\n\t\t\tchildList: true,\n\t\t\tsubtree: true, // because of <optgroup>\n\t\t\t// Listen to option element value attribute changes\n\t\t\t// (doesn't get notified of select value changes,\n\t\t\t// because that property is not reflected as an attribute)\n\t\t\tattributes: true,\n\t\t\tattributeFilter: ['value']\n\t\t});\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n}\n\n/**\n * @param {HTMLSelectElement} select\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_select_value(select, get, set = get) {\n\tvar mounting = true;\n\n\tlisten_to_event_and_reset_event(select, 'change', (is_reset) => {\n\t\tvar query = is_reset ? '[selected]' : ':checked';\n\t\t/** @type {unknown} */\n\t\tvar value;\n\n\t\tif (select.multiple) {\n\t\t\tvalue = [].map.call(select.querySelectorAll(query), get_option_value);\n\t\t} else {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option =\n\t\t\t\tselect.querySelector(query) ??\n\t\t\t\t// will fall back to first non-disabled option if no option is selected\n\t\t\t\tselect.querySelector('option:not([disabled])');\n\t\t\tvalue = selected_option && get_option_value(selected_option);\n\t\t}\n\n\t\tset(value);\n\t});\n\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\n\teffect(() => {\n\t\tvar value = get();\n\t\tselect_option(select, value, mounting);\n\n\t\t// Mounting and value undefined -> take selection from dom\n\t\tif (mounting && value === undefined) {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tif (selected_option !== null) {\n\t\t\t\tvalue = get_option_value(selected_option);\n\t\t\t\tset(value);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-ignore\n\t\tselect.__value = value;\n\t\tmounting = false;\n\t});\n\n\t// don't pass get_value, we already initialize it in the effect above\n\tinit_select(select);\n}\n\n/** @param {HTMLOptionElement} option */\nfunction get_option_value(option) {\n\t// __value only exists if the <option> has a value attribute\n\tif ('__value' in option) {\n\t\treturn option.__value;\n\t} else {\n\t\treturn option.value;\n\t}\n}\n","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    import { browser } from \"$app/environment\";\r\n\r\n    let Plotly;\r\n    let plotDiv;\r\n    \r\n    export let zData = [];\r\n    export let xRange = [-5, 5];\r\n    export let yRange = [-5, 5];\r\n    export let resolution = 50;\r\n    export let title = \"Superficie 3D\";\r\n    export let height = \"600px\"; // Altura personalizable\r\n    export let enableControls = true;\r\n    export let autoRotate = false;\r\n\r\n    let plotInitialized = false;\r\n    let resizeObserver;\r\n\r\n    // Función para crear las coordenadas X e Y\r\n    function generateCoordinates(range, resolution) {\r\n        const coords = [];\r\n        for (let i = 0; i < resolution; i++) {\r\n            coords.push(\r\n                range[0] + ((range[1] - range[0]) * i) / (resolution - 1),\r\n            );\r\n        }\r\n        return coords;\r\n    }\r\n\r\n    // Función principal para crear/actualizar el plot\r\n    async function createOrUpdatePlot() {\r\n        if (!browser || !Plotly || !plotDiv || !zData || zData.length === 0) {\r\n            console.log(\"Condiciones no cumplidas para crear plot:\", {\r\n                browser,\r\n                Plotly: !!Plotly,\r\n                plotDiv: !!plotDiv,\r\n                zDataLength: zData?.length,\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(\"Creando plot con datos:\", {\r\n                zDataRows: zData.length,\r\n                zDataCols: zData[0]?.length,\r\n                resolution,\r\n            });\r\n\r\n            const x = generateCoordinates(xRange, resolution);\r\n            const y = generateCoordinates(yRange, resolution);\r\n\r\n            const data = [\r\n                {\r\n                    z: zData,\r\n                    x: x,\r\n                    y: y,\r\n                    type: \"surface\",\r\n                    colorscale: \"Viridis\",\r\n                    showscale: true,\r\n                    opacity: 0.9,\r\n                    // Mejorar contornos para mejor visualización\r\n                    contours: {\r\n                        z: {\r\n                            show: true,\r\n                            usecolormap: true,\r\n                            highlightcolor: \"#42f462\",\r\n                            project: { z: true },\r\n                            width: 2\r\n                        },\r\n                    },\r\n                    // Añadir reflectancia para mejor apariencia\r\n                    lighting: {\r\n                        ambient: 0.4,\r\n                        diffuse: 0.8,\r\n                        fresnel: 0.2,\r\n                        specular: 1.0,\r\n                        roughness: 0.05\r\n                    }\r\n                },\r\n            ];\r\n\r\n            const layout = {\r\n                title: {\r\n                    text: title,\r\n                    font: { \r\n                        size: 18,\r\n                        color: '#2c3e50',\r\n                        family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\r\n                    },\r\n                    x: 0.5,\r\n                    xanchor: 'center'\r\n                },\r\n                autosize: true,\r\n                margin: { l: 10, r: 10, b: 10, t: 60 },\r\n                paper_bgcolor: 'rgba(0,0,0,0)',\r\n                plot_bgcolor: 'rgba(0,0,0,0)',\r\n                scene: {\r\n                    camera: {\r\n                        eye: { x: 1.5, y: 1.5, z: 1.5 },\r\n                    },\r\n                    bgcolor: 'rgba(248, 249, 250, 1)',\r\n                    xaxis: {\r\n                        title: {\r\n                            text: \"X\",\r\n                            font: { size: 14, color: '#495057' }\r\n                        },\r\n                        range: xRange,\r\n                        gridcolor: 'rgba(0,0,0,0.1)',\r\n                        zerolinecolor: 'rgba(0,0,0,0.2)',\r\n                        tickfont: { size: 11, color: '#495057' }\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: \"Y\",\r\n                            font: { size: 14, color: '#495057' }\r\n                        },\r\n                        range: yRange,\r\n                        gridcolor: 'rgba(0,0,0,0.1)',\r\n                        zerolinecolor: 'rgba(0,0,0,0.2)',\r\n                        tickfont: { size: 11, color: '#495057' }\r\n                    },\r\n                    zaxis: {\r\n                        title: {\r\n                            text: \"Z\",\r\n                            font: { size: 14, color: '#495057' }\r\n                        },\r\n                        gridcolor: 'rgba(0,0,0,0.1)',\r\n                        zerolinecolor: 'rgba(0,0,0,0.2)',\r\n                        tickfont: { size: 11, color: '#495057' }\r\n                    },\r\n                },\r\n            };\r\n\r\n            const config = {\r\n                responsive: true,\r\n                displayModeBar: enableControls,\r\n                displaylogo: false,\r\n                modeBarButtonsToRemove: ['lasso2d', 'select2d', 'autoScale2d'],\r\n                toImageButtonOptions: {\r\n                    format: 'png',\r\n                    filename: 'superficie_3d',\r\n                    height: 800,\r\n                    width: 1200,\r\n                    scale: 2\r\n                }\r\n            };\r\n\r\n            if (plotInitialized) {\r\n                // Actualizar plot existente\r\n                await Plotly.react(plotDiv, data, layout, config);\r\n            } else {\r\n                // Crear nuevo plot\r\n                await Plotly.newPlot(plotDiv, data, layout, config);\r\n                plotInitialized = true;\r\n                console.log(\"Plot inicializado correctamente\");\r\n            }\r\n\r\n            // Auto-rotación si está habilitada\r\n            if (autoRotate && plotInitialized) {\r\n                startAutoRotation();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creando/actualizando plot:\", error);\r\n        }\r\n    }\r\n\r\n    // Función para auto-rotación\r\n    function startAutoRotation() {\r\n        if (!autoRotate || !plotInitialized) return;\r\n        \r\n        let angle = 0;\r\n        const rotationInterval = setInterval(() => {\r\n            if (!autoRotate || !plotInitialized) {\r\n                clearInterval(rotationInterval);\r\n                return;\r\n            }\r\n            \r\n            angle += 1;\r\n            const radians = (angle * Math.PI) / 180;\r\n            const camera = {\r\n                eye: {\r\n                    x: 1.5 * Math.cos(radians),\r\n                    y: 1.5 * Math.sin(radians),\r\n                    z: 1.5\r\n                }\r\n            };\r\n            \r\n            Plotly.relayout(plotDiv, { 'scene.camera': camera });\r\n        }, 100);\r\n    }\r\n\r\n    onMount(async () => {\r\n        if (browser) {\r\n            try {\r\n                console.log(\"Cargando Plotly...\");\r\n                // Cargar Plotly dinámicamente\r\n                Plotly = (await import(\"plotly.js-dist-min\")).default;\r\n                console.log(\"Plotly cargado:\", !!Plotly);\r\n\r\n                // Configurar ResizeObserver para responsividad\r\n                if (plotDiv && window.ResizeObserver) {\r\n                    resizeObserver = new ResizeObserver(() => {\r\n                        if (plotInitialized && Plotly) {\r\n                            Plotly.Plots.resize(plotDiv);\r\n                        }\r\n                    });\r\n                    resizeObserver.observe(plotDiv);\r\n                }\r\n\r\n                // Crear plot inicial si hay datos\r\n                if (zData && zData.length > 0) {\r\n                    await createOrUpdatePlot();\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error en onMount:\", error);\r\n            }\r\n        }\r\n    });\r\n\r\n    onDestroy(() => {\r\n        if (resizeObserver) {\r\n            resizeObserver.disconnect();\r\n        }\r\n        if (plotDiv && Plotly) {\r\n            Plotly.purge(plotDiv);\r\n        }\r\n    });\r\n\r\n    // Reactive statement para actualizar cuando cambien los datos\r\n    $: if (browser && Plotly && plotDiv && zData && zData.length > 0) {\r\n        console.log(\"Datos cambiaron, actualizando plot...\");\r\n        createOrUpdatePlot();\r\n    }\r\n</script>\r\n\r\n<!-- Contenedor principal con mejor estética -->\r\n<div class=\"plot-wrapper\">\r\n    <div \r\n        bind:this={plotDiv}\r\n        style=\"width: 100%; height: {height};\"\r\n        class=\"plot-container\"\r\n    >\r\n        {#if !plotInitialized}\r\n            <div class=\"loading-container\">\r\n                <div class=\"loading-content\">\r\n                    <div class=\"loading-spinner\">\r\n                        <div class=\"spinner-ring\"></div>\r\n                        <div class=\"spinner-icon\">🏔️</div>\r\n                    </div>\r\n                    <div class=\"loading-text\">\r\n                        <h3>Cargando visualización 3D...</h3>\r\n                        <p>Preparando {zData?.length || 0} filas de datos</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/if}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .plot-wrapper {\r\n        width: 100%;\r\n        max-width: 100%;\r\n        margin: 0 auto;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .plot-container {\r\n        border-radius: 12px;\r\n        overflow: hidden;\r\n        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n        box-shadow: \r\n            0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n            0 2px 4px -1px rgba(0, 0, 0, 0.06),\r\n            inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n        border: 1px solid rgba(222, 226, 230, 0.8);\r\n        position: relative;\r\n        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n\r\n    .plot-container:hover {\r\n        box-shadow: \r\n            0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n            0 4px 6px -2px rgba(0, 0, 0, 0.05),\r\n            inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n        transform: translateY(-1px);\r\n    }\r\n\r\n    .loading-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 100%;\r\n        width: 100%;\r\n        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n        position: relative;\r\n    }\r\n\r\n    .loading-content {\r\n        text-align: center;\r\n        color: #495057;\r\n    }\r\n\r\n    .loading-spinner {\r\n        position: relative;\r\n        margin: 0 auto 20px;\r\n        width: 60px;\r\n        height: 60px;\r\n    }\r\n\r\n    .spinner-ring {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 60px;\r\n        height: 60px;\r\n        border: 3px solid transparent;\r\n        border-top: 3px solid #007bff;\r\n        border-radius: 50%;\r\n        animation: spin 1s linear infinite;\r\n    }\r\n\r\n    .spinner-icon {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        font-size: 24px;\r\n        animation: pulse 2s ease-in-out infinite;\r\n    }\r\n\r\n    .loading-text h3 {\r\n        margin: 0 0 8px 0;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #2c3e50;\r\n    }\r\n\r\n    .loading-text p {\r\n        margin: 0;\r\n        font-size: 14px;\r\n        color: #6c757d;\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n\r\n    @keyframes pulse {\r\n        0%, 100% { \r\n            opacity: 1; \r\n            transform: translate(-50%, -50%) scale(1);\r\n        }\r\n        50% { \r\n            opacity: 0.7; \r\n            transform: translate(-50%, -50%) scale(1.1);\r\n        }\r\n    }\r\n\r\n    /* Responsividad */\r\n    @media (max-width: 768px) {\r\n        .plot-container {\r\n            border-radius: 8px;\r\n            margin: 0;\r\n        }\r\n        \r\n        .loading-text h3 {\r\n            font-size: 16px;\r\n        }\r\n        \r\n        .loading-text p {\r\n            font-size: 13px;\r\n        }\r\n    }\r\n\r\n    /* Mejoras para el tema oscuro */\r\n    @media (prefers-color-scheme: dark) {\r\n        .plot-container {\r\n            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\r\n            border-color: rgba(108, 117, 125, 0.3);\r\n            box-shadow: \r\n                0 4px 6px -1px rgba(0, 0, 0, 0.3),\r\n                0 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n                inset 0 1px 0 rgba(255, 255, 255, 0.05);\r\n        }\r\n\r\n        .loading-container {\r\n            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\r\n        }\r\n\r\n        .loading-text h3 {\r\n            color: #ecf0f1;\r\n        }\r\n\r\n        .loading-text p {\r\n            color: #bdc3c7;\r\n        }\r\n\r\n        .spinner-ring {\r\n            border-top-color: #3498db;\r\n        }\r\n    }\r\n</style>","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { browser } from \"$app/environment\";\r\n    import Superficies3D from \"$lib/componentes/graficos/Superficies3DPlot.svelte\";\r\n    import \"../../styles/graphs.css\";\r\n\r\n    // Variables para Superficies 3D\r\n    let zData = [];\r\n    let resolution = 50;\r\n    let scale = 0.2;\r\n    let formula = \"sombrero\";\r\n    let isGenerating = false;\r\n    let showCustomEditor = false;\r\n    let customFormula = \"Math.sin(Math.sqrt(x*x + y*y))\";\r\n\r\n    // Parámetros personalizables para cada fórmula\r\n    let parameters = {\r\n        sombrero: { amplitude: 1, frequency: 1 },\r\n        coseno: { amplitude: 1, frequency: 1 },\r\n        ondas: { amplitude: 0.5, frequency: 3, separation: 1 },\r\n        gaussiana: { amplitude: 1, spread: 2 },\r\n        paraboloide: { curvature: 1, offset: 0 },\r\n        silla: { curvatureX: 1, curvatureY: 1 },\r\n        custom: {},\r\n    };\r\n\r\n    // Formulas disponibles con parámetros\r\n    const formulas = {\r\n        sombrero: (x, y) => {\r\n            const { amplitude, frequency } = parameters.sombrero;\r\n            const r = Math.sqrt(x * x + y * y) * frequency;\r\n            return r === 0 ? amplitude : (amplitude * Math.sin(r)) / r;\r\n        },\r\n        coseno: (x, y) => {\r\n            const { amplitude, frequency } = parameters.coseno;\r\n            return amplitude * Math.cos(x * y * frequency);\r\n        },\r\n        ondas: (x, y) => {\r\n            const { amplitude, frequency, separation } = parameters.ondas;\r\n            const r1 = Math.sqrt((x - separation) ** 2 + y ** 2);\r\n            const r2 = Math.sqrt((x + separation) ** 2 + y ** 2);\r\n            return (\r\n                amplitude * Math.sin(r1 * frequency) +\r\n                amplitude * Math.sin(r2 * frequency)\r\n            );\r\n        },\r\n        gaussiana: (x, y) => {\r\n            const { amplitude, spread } = parameters.gaussiana;\r\n            return amplitude * Math.exp(-(x ** 2 + y ** 2) / spread);\r\n        },\r\n        paraboloide: (x, y) => {\r\n            const { curvature, offset } = parameters.paraboloide;\r\n            return curvature * (x ** 2 + y ** 2) + offset;\r\n        },\r\n        silla: (x, y) => {\r\n            const { curvatureX, curvatureY } = parameters.silla;\r\n            return curvatureX * x ** 2 - curvatureY * y ** 2;\r\n        },\r\n        custom: (x, y) => {\r\n            try {\r\n                // Evaluar la fórmula personalizada\r\n                return eval(\r\n                    customFormula\r\n                        .replace(/x/g, `(${x})`)\r\n                        .replace(/y/g, `(${y})`),\r\n                );\r\n            } catch (error) {\r\n                console.error(\"Error en fórmula personalizada:\", error);\r\n                return 0;\r\n            }\r\n        },\r\n    };\r\n\r\n    // Descripciones de las fórmulas\r\n    const formulaDescriptions = {\r\n        sombrero: \"z = A × sin(f×r)/r donde r = √(x² + y²)\",\r\n        coseno: \"z = A × cos(f × x × y)\",\r\n        ondas: \"z = A × [sin(f×r₁) + sin(f×r₂)]\",\r\n        gaussiana: \"z = A × e^(-(x² + y²)/s)\",\r\n        paraboloide: \"z = c × (x² + y²) + offset\",\r\n        silla: \"z = cₓ × x² - cᵧ × y²\",\r\n        custom: \"Fórmula personalizada\",\r\n    };\r\n\r\n    // Generar datos de superficie usando la fórmula seleccionada\r\n    function generateSurfaceData() {\r\n        if (!browser) return [];\r\n\r\n        const data = [];\r\n        const formulaFn = formulas[formula];\r\n\r\n        for (let j = 0; j < resolution; j++) {\r\n            const row = [];\r\n            for (let i = 0; i < resolution; i++) {\r\n                const x = (i - resolution / 2) * scale;\r\n                const y = (j - resolution / 2) * scale;\r\n                try {\r\n                    const z = formulaFn(x, y);\r\n                    row.push(isNaN(z) || !isFinite(z) ? 0 : z);\r\n                } catch (error) {\r\n                    row.push(0);\r\n                }\r\n            }\r\n            data.push(row);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    // Actualizar superficie\r\n    async function updateSurface() {\r\n        isGenerating = true;\r\n        // Pequeño delay para mostrar el loading\r\n        await new Promise((resolve) => setTimeout(resolve, 50));\r\n        zData = generateSurfaceData();\r\n        isGenerating = false;\r\n    }\r\n\r\n    // Manejar cambios de parámetros desde el componente\r\n    function handleParametersChange(event) {\r\n        const {\r\n            resolution: newResolution,\r\n            scale: newScale,\r\n            formula: newFormula,\r\n        } = event.detail;\r\n        if (newResolution !== undefined) resolution = newResolution;\r\n        if (newScale !== undefined) scale = newScale;\r\n        if (newFormula !== undefined) formula = newFormula;\r\n        updateSurface();\r\n    }\r\n\r\n    // Resetear parámetros a valores por defecto\r\n    function resetParameters() {\r\n        parameters = {\r\n            sombrero: { amplitude: 1, frequency: 1 },\r\n            coseno: { amplitude: 1, frequency: 1 },\r\n            ondas: { amplitude: 0.5, frequency: 3, separation: 1 },\r\n            gaussiana: { amplitude: 1, spread: 2 },\r\n            paraboloide: { curvature: 1, offset: 0 },\r\n            silla: { curvatureX: 1, curvatureY: 1 },\r\n            custom: {},\r\n        };\r\n        updateSurface();\r\n    }\r\n\r\n    // Ejemplos de fórmulas personalizadas\r\n    const customExamples = [\r\n        \"Math.sin(Math.sqrt(x*x + y*y))\",\r\n        \"Math.sin(x) * Math.cos(y)\",\r\n        \"x*x - y*y\",\r\n        \"Math.exp(-(x*x + y*y)/4) * Math.cos(5*Math.sqrt(x*x + y*y))\",\r\n        \"Math.sin(x*3) + Math.cos(y*3)\",\r\n        \"(x*x + y*y) * Math.sin(x*y)\",\r\n    ];\r\n\r\n    // Reactividad\r\n    $: if (browser && (resolution || scale || formula)) {\r\n        updateSurface();\r\n    }\r\n\r\n    // Actualizar cuando cambien los parámetros\r\n    $: if (browser && parameters) {\r\n        updateSurface();\r\n    }\r\n\r\n    onMount(() => {\r\n        updateSurface();\r\n    });\r\n</script>\r\n\r\n<svelte:head>\r\n    <title>Superficies 3D - Visualizador Matemático</title>\r\n    <meta\r\n        name=\"description\"\r\n        content=\"Visualizador interactivo de superficies matemáticas en 3D\"\r\n    />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n</svelte:head>\r\n\r\n<div class=\"graphs-page\">\r\n    <div class=\"app-container\">\r\n        <!-- Header -->\r\n        <header class=\"header\">\r\n            <div class=\"header-content\">\r\n                <h1 class=\"app-title\">\r\n                    <span class=\"title-icon\">🏔️</span>\r\n                    Superficies 3D\r\n                </h1>\r\n                <nav class=\"header-nav\">\r\n                    <a href=\"/proyecto-interfaces\" class=\"nav-link\">\r\n                        <span class=\"nav-icon\">🧮</span>\r\n                        Calculadora\r\n                    </a>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n\r\n        <!-- Controles principales -->\r\n        <div class=\"controls-container\">\r\n            <div class=\"controls-content\">\r\n                <div class=\"control-group\">\r\n                    <label for=\"formula-select\">Fórmula:</label>\r\n                    <select\r\n                        id=\"formula-select\"\r\n                        bind:value={formula}\r\n                        disabled={isGenerating}\r\n                    >\r\n                        <option value=\"sombrero\">Sombrero (sinc)</option>\r\n                        <option value=\"coseno\">Coseno</option>\r\n                        <option value=\"ondas\">Ondas</option>\r\n                        <option value=\"gaussiana\">Gaussiana</option>\r\n                        <option value=\"paraboloide\">Paraboloide</option>\r\n                        <option value=\"silla\">Silla de montar</option>\r\n                        <option value=\"custom\">Personalizada</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"control-group\">\r\n                    <label for=\"resolution-range\"\r\n                        >Resolución: {resolution}</label\r\n                    >\r\n                    <input\r\n                        id=\"resolution-range\"\r\n                        type=\"range\"\r\n                        bind:value={resolution}\r\n                        min=\"20\"\r\n                        max=\"100\"\r\n                        step=\"5\"\r\n                        disabled={isGenerating}\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"control-group\">\r\n                    <label for=\"scale-range\">Escala: {scale.toFixed(2)}</label>\r\n                    <input\r\n                        id=\"scale-range\"\r\n                        type=\"range\"\r\n                        bind:value={scale}\r\n                        min=\"0.1\"\r\n                        max=\"0.5\"\r\n                        step=\"0.05\"\r\n                        disabled={isGenerating}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    class=\"reset-btn\"\r\n                    on:click={resetParameters}\r\n                    disabled={isGenerating}\r\n                >\r\n                    🔄 Resetear\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Panel de parámetros específicos -->\r\n        <div class=\"parameters-container\">\r\n            <div class=\"parameters-content\">\r\n                <div class=\"formula-info\">\r\n                    <h3>📊 {formulaDescriptions[formula]}</h3>\r\n                </div>\r\n\r\n                {#if formula === \"custom\"}\r\n                    <div class=\"custom-formula-section\">\r\n                        <div class=\"custom-input-group\">\r\n                            <label for=\"custom-formula\"\r\n                                >Fórmula personalizada (usar x, y):</label\r\n                            >\r\n                            <input\r\n                                id=\"custom-formula\"\r\n                                type=\"text\"\r\n                                bind:value={customFormula}\r\n                                placeholder=\"Math.sin(x) * Math.cos(y)\"\r\n                                disabled={isGenerating}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"examples-section\">\r\n                            <label for=\"examples-label\">Ejemplos:</label>\r\n                            <div class=\"examples-grid\">\r\n                                {#each customExamples as example}\r\n                                    <button\r\n                                        class=\"example-btn\"\r\n                                        on:click={() =>\r\n                                            (customFormula = example)}\r\n                                        disabled={isGenerating}\r\n                                    >\r\n                                        {example}\r\n                                    </button>\r\n                                {/each}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                {:else}\r\n                    <div class=\"parameters-grid\">\r\n                        {#if formula === \"sombrero\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"sombrero-amplitude\"\r\n                                        >Amplitud: {parameters.sombrero.amplitude.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"sombrero-amplitude\"\r\n                                        type=\"range\"\r\n                                        bind:value={\r\n                                            parameters.sombrero.amplitude\r\n                                        }\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.sombrero.amplitude}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"sombrero-frequency\"\r\n                                        >Frecuencia: {parameters.sombrero.frequency.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"sombrero-frequency\"\r\n                                        type=\"range\"\r\n                                        bind:value={\r\n                                            parameters.sombrero.frequency\r\n                                        }\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.sombrero.frequency}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n\r\n                        {#if formula === \"coseno\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"coseno-amplitude\"\r\n                                        >Amplitud: {parameters.coseno.amplitude.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"coseno-amplitude\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.coseno.amplitude}\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.coseno.amplitude}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"coseno-frequency\"\r\n                                        >Frecuencia: {parameters.coseno.frequency.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"coseno-frequency\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.coseno.frequency}\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.coseno.frequency}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n\r\n                        {#if formula === \"ondas\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"ondas-amplitude\"\r\n                                        >Amplitud: {parameters.ondas.amplitude.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"ondas-amplitude\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.ondas.amplitude}\r\n                                        min=\"0.1\"\r\n                                        max=\"2\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.ondas.amplitude}\r\n                                    min=\"0.1\"\r\n                                    max=\"2\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"ondas-frequency\"\r\n                                        >Frecuencia: {parameters.ondas.frequency.toFixed(\r\n                                            1,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"ondas-frequency\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.ondas.frequency}\r\n                                        min=\"1\"\r\n                                        max=\"8\"\r\n                                        step=\"0.5\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.ondas.frequency}\r\n                                    min=\"1\"\r\n                                    max=\"8\"\r\n                                    step=\"0.5\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"ondas-separation\"\r\n                                        >Separación: {parameters.ondas.separation.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"ondas-separation\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.ondas.separation}\r\n                                        min=\"0.5\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.ondas.separation}\r\n                                    min=\"0.5\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n\r\n                        {#if formula === \"gaussiana\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"gaussiana-amplitude\"\r\n                                        >Amplitud: {parameters.gaussiana.amplitude.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"gaussiana-amplitude\"\r\n                                        type=\"range\"\r\n                                        bind:value={\r\n                                            parameters.gaussiana.amplitude\r\n                                        }\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.gaussiana.amplitude}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"gaussiana-spread\"\r\n                                        >Dispersión: {parameters.gaussiana.spread.toFixed(\r\n                                            1,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"gaussiana-spread\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.gaussiana.spread}\r\n                                        min=\"0.5\"\r\n                                        max=\"5\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.gaussiana.spread}\r\n                                    min=\"0.5\"\r\n                                    max=\"5\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n\r\n                        {#if formula === \"paraboloide\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"paraboloide-curvature\"\r\n                                        >Curvatura: {parameters.paraboloide.curvature.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"paraboloide-curvature\"\r\n                                        type=\"range\"\r\n                                        bind:value={\r\n                                            parameters.paraboloide.curvature\r\n                                        }\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={\r\n                                        parameters.paraboloide.curvature\r\n                                    }\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"paraboloide-offset\"\r\n                                        >Offset: {parameters.paraboloide.offset.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"paraboloide-offset\"\r\n                                        type=\"range\"\r\n                                        bind:value={\r\n                                            parameters.paraboloide.offset\r\n                                        }\r\n                                        min=\"-2\"\r\n                                        max=\"2\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.paraboloide.offset}\r\n                                    min=\"-2\"\r\n                                    max=\"2\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n\r\n                        {#if formula === \"silla\"}\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"silla-curvatureX\"\r\n                                        >Curvatura X: {parameters.silla.curvatureX.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"silla-curvatureX\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.silla.curvatureX}\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.silla.curvatureX}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                            <div class=\"param-group\">\r\n                                <div class=\"param-group\">\r\n                                    <label for=\"silla-curvatureY\"\r\n                                        >Curvatura Y: {parameters.silla.curvatureY.toFixed(\r\n                                            2,\r\n                                        )}</label\r\n                                    >\r\n                                    <input\r\n                                        id=\"silla-curvatureY\"\r\n                                        type=\"range\"\r\n                                        bind:value={parameters.silla.curvatureY}\r\n                                        min=\"0.1\"\r\n                                        max=\"3\"\r\n                                        step=\"0.1\"\r\n                                        disabled={isGenerating}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    bind:value={parameters.silla.curvatureY}\r\n                                    min=\"0.1\"\r\n                                    max=\"3\"\r\n                                    step=\"0.1\"\r\n                                    disabled={isGenerating}\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Contenido principal -->\r\n        <main class=\"main-content\">\r\n            {#if isGenerating}\r\n                <div class=\"loading-overlay\">\r\n                    <div class=\"loading-spinner\"></div>\r\n                    <p class=\"loading-text\">Generando superficie...</p>\r\n                </div>\r\n            {/if}\r\n\r\n            <div class=\"graph-container\">\r\n                <Superficies3D\r\n                    {zData}\r\n                    xRange={[-5, 5]}\r\n                    yRange={[-5, 5]}\r\n                    {resolution}\r\n                    enableControls={true}\r\n                    autoRotate={false}\r\n                    on:parametersChange={handleParametersChange}\r\n                />\r\n            </div>\r\n        </main>\r\n    </div>\r\n</div>\r\n"],"file":"internal/immutable/nodes/3.BnJimLqt.js"}